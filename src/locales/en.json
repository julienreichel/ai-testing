{
  "dashboard": {
    "title": "Dashboard",
    "subtitle": "Monitor your AI testing environment and manage providers",
    "activeProviders": "Active Providers",
    "totalTests": "Total Tests",
    "recentRuns": "Recent Runs",
    "outOf": "out of {total}",
    "testCasesReady": "ready to run",
    "last24Hours": "last 24 hours",
    "summary": {},
    "quickActions": "Quick Actions",
    "createTest": "Create Test Case",
    "createTestDescription": "Design new test scenarios for your AI models",
    "viewResults": "View Results",
    "viewResultsDescription": "Analyze test run results and performance metrics"
  },
  "providers": {
    "title": "AI Providers",
    "addProvider": "Add Provider",
    "securityNotice": {
      "title": "Security Notice",
      "message": "Your API keys are stored securely in your browser's local storage:",
      "point1": "Keys never leave your browser or device",
      "point2": "No data is transmitted to our servers",
      "point3": "Clear browser data will remove all stored keys",
      "acknowledge": "I Understand"
    },
    "noProviders": "No providers configured. Add one to get started.",
    "noProvidersDescription": "Connect your AI providers to start running tests. Your API keys are stored securely in your browser.",
    "apiKey": "API Key",
    "apiKeyPlaceholder": "Enter your API key",
    "apiKeyHint": "Your API key is stored securely in your browser and never sent to our servers",
    "configured": "Configured",
    "notConfigured": "Not Configured",
    "validation": "Validation",
    "valid": "Valid",
    "invalid": "Invalid",
    "notTested": "Not Tested",
    "lastTested": "Last Tested",
    "testing": "Testing...",
    "test": "Test",
    "testSuccess": "Test Successful",
    "testSuccessMessage": "Provider connection test passed successfully",
    "testFailed": "Test Failed",
    "testFailedMessage": "Provider connection test failed. Please check your configuration.",
    "edit": "Edit",
    "editTypeNotice": "Provider type cannot be changed when editing",
    "status": {},
    "keyStatus": {},
    "remove": "Remove",
    "deleteSuccess": "Provider Deleted",
    "deleteSuccessMessage": "Provider has been successfully removed",
    "addSuccess": "Provider Added",
    "addSuccessMessage": "Provider has been successfully added",
    "error": "Error",
    "unknownError": "An unknown error occurred",
    "confirmDelete": "Are you sure you want to delete {name}?",
    "confirmDeleteTitle": "Delete Provider",
    "confirmDeleteDescription": "This action cannot be undone. All configuration data for this provider will be permanently removed.",
    "providerType": "Provider Type",
    "selectType": "Select a provider type",
    "name": "Name",
    "namePlaceholder": "e.g., My Provider",
    "baseUrl": "Base URL",
    "baseUrlHint": "Custom API endpoint (leave empty for default)",
    "baseUrlPlaceholder": "https://api.provider.com/v1",
    "editProvider": "Edit Provider"
  },
  "editor": {},
  "promptEditor": {
    "title": "Prompt Editor",
    "provider": "Provider",
    "selectProvider": "Select a provider",
    "model": "Model",
    "selectModel": "Select a model",
    "systemPrompt": "System Prompt",
    "systemPromptPlaceholder": "Enter system instructions (optional)",
    "systemPromptHint": "System prompts set the behavior and personality of the AI assistant",
    "userPrompt": "User Prompt",
    "userPromptPlaceholder": "Enter your prompt here",
    "enterPrompt": "Enter your prompt here",
    "parameters": "Parameters",
    "temperature": "Temperature",
    "temperatureHint": "Controls randomness (0 = deterministic, 2 = very creative)",
    "maxTokens": "Max Tokens",
    "maxTokensHint": "Maximum length of the response",
    "estimatedTokens": "Estimated tokens",
    "runOnce": "Run Once",
    "saveAsTestCase": "Save as Test Case",
    "generatingResponse": "Generating Response",
    "generatingMultipleResponses": "Generating Multiple Responses",
    "pleaseWait": "Please wait while we process your request",
    "pleaseWaitMultiple": "Processing {completed} of {total} runs...",
    "multipleResults": "Multiple Results",
    "executionError": "Execution Error",
    "response": "Response",
    "inputTokens": "Input Tokens",
    "outputTokens": "Output Tokens",
    "totalTokens": "Total Tokens",
    "cost": "Cost",
    "noResults": "No Results",
    "runPromptToSeeResults": "Run a prompt to see results here",
    "showBatch": "Show Batch Runner",
    "hideBatch": "Hide Batch Runner",
    "runConfiguration": "Run Configuration",
    "numberOfRuns": "Number of Runs",
    "runInParallel": "Run in parallel",
    "parallelRequiresMultipleRuns": "Parallel execution requires 2 or more runs",
    "concurrency": "Concurrency",
    "delayBetweenRuns": "Delay Between Runs (ms)",
    "delayPlaceholder": "Delay in milliseconds",
    "parallelExecution": "Parallel Execution",
    "parallelInfo": "{runs} runs will execute {concurrency} at a time",
    "sequentialExecution": "Sequential Execution",
    "sequentialInfo": "{runs} runs will execute one after another with {delay}ms delay",
    "runMultiple": "Run {count} times"
  },
  "tests": {
    "title": "Test Cases",
    "description": "Manage your test cases",
    "unableToLoad": "Unable to Load Tests",
    "noProjectsYet": "No Projects Yet",
    "createFirstProject": "Create your first project to start organizing your test cases.",
    "noTestCasesYet": "No Test Cases Yet",
    "createTestCasesFromEditor": "Create test cases by saving prompts from the Editor."
  },
  "runs": {
    "title": "Test Runs",
    "description": "View test run results and history",
    "tabs": {},
    "individualRuns": {},
    "filter": {
      "allProjects": "All Projects",
      "search": "Search test name, provider, or model...",
      "noResults": "No results found for your search"
    },
    "batchHistory": {
      "title": "Batch Run History",
      "empty": "No batch runs found. Run some batch tests to see them here.",
      "details": "Details",
      "individualResults": "Individual Results",
      "testDetails": "Test Configuration",
      "provider": "Provider",
      "model": "Model",
      "prompt": "Prompt"
    },
    "table": {
      "runIndex": "Run #",
      "status": "Status",
      "duration": "Duration",
      "cost": "Cost",
      "passed": "Passed",
      "response": "Response",
      "testName": "Test Name",
      "provider": "Provider & Model",
      "passRate": "Pass Rate",
      "date": "Date",
      "actions": "Actions"
    }
  },
  "common": {
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "add": "Add",
    "update": "Update",
    "loading": "Loading...",
    "copy": "Copy",
    "clear": "Clear",
    "retry": "Retry",
    "export": "Export",
    "import": "Import",
    "refresh": "Refresh",
    "viewDetails": "View Details",
    "close": "Close",
    "yes": "Yes",
    "no": "No",
    "backToTests": "Back to Tests",
    "tryAgain": "Try Again",
    "remove": "Remove"
  },
  "rules": {
    "title": "Validation Rules",
    "description": "Define rules to automatically validate AI output quality",
    "addRule": "Add Rule",
    "options": {
      "caseSensitive": "Case Sensitive",
      "respectPunctuation": "Punctuation & Spacing Matter"
    },
    "types": {
      "equals": {
        "label": "Equals",
        "description": "Text must match exactly"
      },
      "contains": {
        "label": "Contains",
        "description": "Text must contain the specified value"
      },
      "startsWith": {
        "label": "Starts With",
        "description": "Text must start with the specified value"
      },
      "endsWith": {
        "label": "Ends With",
        "description": "Text must end with the specified value"
      },
      "regex": {
        "label": "Regex",
        "description": "Text must match the regular expression pattern"
      },
      "length": {
        "label": "Length",
        "description": "Text length must be within specified range"
      }
    },
    "testResults": "Test Results",
    "passed": "Passed",
    "failed": "Failed",
    "validation": {
      "equals": {
        "pass": "Text equals \"{value}\"",
        "fail": "Expected \"{expected}\", got \"{actual}\""
      },
      "contains": {
        "pass": "Text contains \"{value}\"",
        "fail": "Text does not contain \"{value}\""
      },
      "startsWith": {
        "pass": "Text starts with \"{value}\"",
        "fail": "Text does not start with \"{value}\""
      },
      "endsWith": {
        "pass": "Text ends with \"{value}\"",
        "fail": "Text does not end with \"{value}\""
      },
      "regex": {
        "pass": "Text matches pattern /{pattern}/{flags}",
        "fail": "Text does not match pattern /{pattern}/{flags}",
        "invalidPattern": "Invalid regex pattern: {error}"
      },
      "length": {
        "withinRange": "Length {length} is within range {min}-{max}",
        "outsideRange": "Length {length} is not within range {min}-{max}",
        "atLeastMin": "Length {length} is at least {min}",
        "belowMin": "Length {length} is less than minimum {min}",
        "atMostMax": "Length {length} is at most {max}",
        "exceedsMax": "Length {length} exceeds maximum {max}",
        "lengthIs": "Length is {length}"
      },
      "ruleSet": {
        "noRules": "No rules to validate",
        "allPassed": "All {total} rules passed",
        "somePassedAnd": "{passed}/{total} rules passed (requires all)",
        "somePassedOr": "{passed}/{total} rules passed (requires at least one)",
        "nonePassedOr": "No rules passed (requires at least one)",
        "overallAllPassed": "All {total} rule sets passed",
        "overallSomePassed": "{passed}/{total} rule sets passed",
        "noRuleSets": "No rule sets to validate"
      },
      "unknownRuleType": "Unknown rule type"
    }
  },
  "validation": {
    "required": "This field is required",
    "invalidUrl": "Please enter a valid URL"
  },
  "testManagement": {
    "title": "Test Management",
    "createProject": "Create Project",
    "testCases": "test cases",
    "addTestCase": "Add Test Case",
    "import": "Import",
    "export": "Export",
    "exportProject": "Export Project",
    "importProject": "Import Project",
    "selectProject": "Select Project",
    "chooseProject": "Choose a project...",
    "selectFile": "Select File",
    "importPreview": "Import Preview",
    "projectName": "Project Name",
    "description": "Description",
    "testRuns": "Test Runs",
    "saveTestCase": "Save Test Case",
    "testCaseName": "Test Case Name",
    "enterTestCaseName": "Enter test case name",
    "enterDescription": "Enter description (optional)",
    "project": "Project",
    "enterProjectName": "Enter project name",
    "projectDescription": "Project Description",
    "enterProjectDescription": "Enter project description (optional)",
    "projectNamePlaceholder": "Enter project name",
    "projectDescriptionPlaceholder": "Enter project description (optional)",
    "deleteProject": "Delete Project",
    "deleteTestCase": "Delete Test Case",
    "deleteProjectConfirmation": "Are you sure you want to delete \"{projectName}\"? This will also delete all test cases in this project.",
    "deleteTestCaseConfirmation": "Are you sure you want to delete \"{testCaseName}\"? This action cannot be undone.",
    "quickRun": "Quick Run",
    "openInEditor": "Open in Editor",
    "prompt": "Prompt",
    "ruleSet": "Rule Set {number}",
    "runs": "runs",
    "rules": "rules",
    "promptPreview": "Prompt Preview",
    "validationRules": "Validation Rules",
    "rulesCount": "{count} validation rules configured",
    "updateTestCase": "Update Test Case",
    "saveAsNewTestCase": "Save as New Test Case"
  },
  "quickRun": {
    "title": "Quick Run",
    "configuration": "Configuration",
    "globalSettings": "Global Settings",
    "providers": "Providers",
    "provider": "Provider",
    "addProvider": "Add Provider",
    "noProvidersConfigured": "No providers configured. Click 'Add Provider' to begin.",
    "numberOfRuns": "Number of Runs",
    "enableParallel": "Enable Parallel Execution",
    "concurrency": "Concurrency",
    "progress": "Progress",
    "completedRuns": "Completed Runs",
    "latestResults": "Latest Results",
    "startRun": "Start Run",
    "cancelRun": "Cancel Run",
    "status": {
      "idle": "Ready",
      "running": "Running",
      "completed": "Completed",
      "cancelled": "Cancelled",
      "failed": "Failed"
    }
  },
  "batch": {
    "runner": {
      "title": "Batch Runner",
      "status": {
        "running": "Running"
      },
      "passRate": "Pass Rate"
    },
    "config": {
      "runCount": "Number of Runs",
      "maxRetries": "Max Retries",
      "delayMs": "Delay Between Runs (ms)"
    },
    "progress": {
      "completed": "{completed} of {total} completed"
    },
    "stats": {
      "passed": "Passed",
      "failed": "Failed",
      "avgLatency": "Avg Latency",
      "totalCost": "Total Cost"
    },
    "errors": {
      "title": "Errors"
    },
    "actions": {
      "start": "Start Batch",
      "cancel": "Cancel",
      "reset": "Reset",
      "export": "Export Results"
    },
    "charts": {
      "passRate": {},
      "latency": {},
      "cost": {},
      "timeline": {
        "title": "Progress Timeline"
      },
      "summary": {
        "title": "Summary Statistics",
        "passRate": "Pass Rate",
        "p50Latency": "Median Latency",
        "p90Latency": "90th Percentile Latency",
        "totalCost": "Total Cost"
      }
    }
  }
}
